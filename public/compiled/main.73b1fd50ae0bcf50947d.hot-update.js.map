{"version":3,"sources":["webpack:///./resources/js/atoms/Dropdown.jsx"],"names":["Dropdown","props","placeholder","options","console","log","useState","isActive","setIsActive","currentRegion","setCurrentRegion","possibleRegions","setPossibleRegions","handleChange","e","target","value","filter","option","includes","Caret","length","map","innerHTML","propTypes","PropTypes","string","arrayOf","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MAClBC,WADkB,GACOD,KADP,CAClBC,WADkB;AAAA,MACLC,OADK,GACOF,KADP,CACLE,OADK;AAG1BC,SAAO,CAACC,GAAR,CAAY,WAAZ;;AAH0B,kBAKMC,sDAAQ,CAAC,KAAD,CALd;AAAA;AAAA,MAKnBC,QALmB;AAAA,MAKTC,WALS;;AAAA,mBAMgBF,sDAAQ,CAACJ,WAAD,CANxB;AAAA;AAAA,MAMnBO,aANmB;AAAA,MAMJC,gBANI;;AAAA,mBAOoBJ,sDAAQ,CAACH,OAAD,CAP5B;AAAA;AAAA,MAOnBQ,eAPmB;AAAA,MAOFC,kBAPE;;AAS1B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1BV,WAAO,CAACC,GAAR,CAAYS,CAAC,CAACC,MAAF,CAASC,KAArB;AACAJ,sBAAkB,CAChBT,OAAO,CAACc,MAAR,CAAe,UAACC,MAAD;AAAA,aAAYA,MAAM,CAACC,QAAP,CAAgBL,CAAC,CAACC,MAAF,CAASC,KAAzB,CAAZ;AAAA,KAAf,CADgB,CAAlB;AAGD,GALD;;AAOA,sBACE;AAAK,aAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,aAAS,gCACPT,QAAQ,GAAG,gCAAH,GAAsC,EADvC,CADX;AAIE,YAAQ,EAAE,CAJZ;AAKE,WAAO,EAAE;AAAA,aAAMC,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA,KALX;AAME,QAAI,EAAC,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AACE,QAAI,EAAC,MADP;AAEE,aAAS,EAAC,qBAFZ;AAGE,MAAE,EAAC,UAHL;AAIE,QAAI,EAAC,UAJP;AAKE,eAAW,EAAEE,aALf;AAME,YAAQ,EAAE,kBAACK,CAAD;AAAA,aAAOD,YAAY,CAACC,CAAD,CAAnB;AAAA,KANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAgBE;AAAK,OAAG,EAAEM,oEAAV;AAAiB,OAAG,EAAC,OAArB;AAA6B,aAAS,EAAC,iBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAiBE;AAAK,aAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,eAAe,CAACU,MAAhB,GAAyB,CAAzB,IACCV,eAAe,CAACW,GAAhB,CAAoB,UAACJ,MAAD;AAAA,wBAClB;AACE,eAAS,EAAC,kBADZ;AAEE,SAAG,eAAQA,MAAR,CAFL;AAGE,aAAO,EAAE,iBAACJ,CAAD;AAAA,eAAOJ,gBAAgB,CAACI,CAAC,CAACC,MAAF,CAASQ,SAAV,CAAvB;AAAA,OAHX;AAIE,cAAQ,EAAEhB,QAAQ,GAAG,CAAH,GAAO,CAAC,CAJ5B;AAKE,UAAI,EAAC,QALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGW,MAPH,CADkB;AAAA,GAApB,CAFJ,CAjBF,CADF,CADF;AAoCD,CApDD;;AAsDAlB,QAAQ,CAACwB,SAAT,GAAqB;AACnBtB,aAAW,EAAEuB,iDAAS,CAACC,MADJ;AAEnBvB,SAAO,EAAEsB,iDAAS,CAACE,OAAV,CAAkBF,iDAAS,CAACC,MAA5B;AAFU,CAArB;AAKA1B,QAAQ,CAAC4B,YAAT,GAAwB;AACtB1B,aAAW,EAAE,kBADS;AAEtBC,SAAO,EAAE,CAAC,QAAD,EAAW,SAAX,EAAsB,MAAtB,EAA8B,QAA9B,EAAwC,SAAxC;AAFa,CAAxB;AAKeH,uEAAf,E","file":"main.73b1fd50ae0bcf50947d.hot-update.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Caret from '../../assets/icons/caret-solid.svg';\n\nconst Dropdown = (props) => {\n  const { placeholder, options } = props;\n\n  console.log('Render!!!');\n\n  const [isActive, setIsActive] = useState(false);\n  const [currentRegion, setCurrentRegion] = useState(placeholder);\n  const [possibleRegions, setPossibleRegions] = useState(options);\n\n  const handleChange = (e) => {\n    console.log(e.target.value);\n    setPossibleRegions(\n      options.filter((option) => option.includes(e.target.value)),\n    );\n  };\n\n  return (\n    <div className=\"Dropdown\">\n      <div\n        className={`Dropdown__Container ${\n          isActive ? 'Dropdown__Container--is-Active' : ''\n        }`}\n        tabIndex={0}\n        onClick={() => setIsActive(!isActive)}\n        role=\"button\"\n      >\n        <input\n          type=\"text\"\n          className=\"Dropdown__Selection\"\n          id=\"selected\"\n          name=\"selected\"\n          placeholder={currentRegion}\n          onChange={(e) => handleChange(e)}\n        />\n        <img src={Caret} alt=\"Caret\" className=\"Dropdown__Caret\" />\n        <div className=\"Dropdown__Options-container\">\n          {possibleRegions.length > 0 &&\n            possibleRegions.map((option) => (\n              <div\n                className=\"Dropdown__Option\"\n                key={`k__${option}`}\n                onClick={(e) => setCurrentRegion(e.target.innerHTML)}\n                tabIndex={isActive ? 0 : -1}\n                role=\"button\"\n              >\n                {option}\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDropdown.propTypes = {\n  placeholder: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.string),\n};\n\nDropdown.defaultProps = {\n  placeholder: 'Filter by Region',\n  options: ['Africa', 'America', 'Asia', 'Europe', 'Oceania'],\n};\n\nexport default Dropdown;\n"],"sourceRoot":""}