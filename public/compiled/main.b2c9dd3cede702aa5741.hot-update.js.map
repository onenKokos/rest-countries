{"version":3,"sources":["webpack:///./resources/js/atoms/Dropdown.jsx"],"names":["Dropdown","props","placeholder","options","useState","isActive","setIsActive","Caret","length","map","option","propTypes","PropTypes","string","arrayOf","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MAClBC,WADkB,GACOD,KADP,CAClBC,WADkB;AAAA,MACLC,OADK,GACOF,KADP,CACLE,OADK;;AAAA,kBAGMC,sDAAQ,CAAC,KAAD,CAHd;AAAA;AAAA,MAGnBC,QAHmB;AAAA,MAGTC,WAHS;;AAK1B,sBACE;AAAK,aAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,aAAS,gCACPD,QAAQ,GAAG,gCAAH,GAAsC,EADvC,CADX;AAIE,YAAQ,EAAE,CAJZ;AAKE,WAAO,EAAE;AAAA,aAAMC,WAAW,CAAC,CAACD,QAAF,CAAjB;AAAA,KALX;AAME,QAAI,EAAC,QANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AACE,QAAI,EAAC,MADP;AAEE,aAAS,EAAC,qBAFZ;AAGE,MAAE,EAAC,UAHL;AAIE,QAAI,EAAC,UAJP;AAKE,eAAW,EAAEH,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eAeE;AAAK,OAAG,EAAEK,oEAAV;AAAiB,OAAG,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,eAgBE;AAAK,aAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OAAO,CAACK,MAAR,GAAiB,CAAjB,IACCL,OAAO,CAACM,GAAR,CAAY,UAACC,MAAD;AAAA,wBACV;AAAK,eAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCA,MAAnC,CADU;AAAA,GAAZ,CAFJ,CAhBF,CADF,CADF;AA2BD,CAhCD;;AAkCAV,QAAQ,CAACW,SAAT,GAAqB;AACnBT,aAAW,EAAEU,iDAAS,CAACC,MADJ;AAEnBV,SAAO,EAAES,iDAAS,CAACE,OAAV,CAAkBF,iDAAS,CAACC,MAA5B;AAFU,CAArB;AAKAb,QAAQ,CAACe,YAAT,GAAwB;AACtBb,aAAW,EAAE,kBADS;AAEtBC,SAAO,EAAE,CAAC,OAAD,EAAU,OAAV;AAFa,CAAxB;AAKeH,uEAAf,E","file":"main.b2c9dd3cede702aa5741.hot-update.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Caret from '../../assets/icons/caret-solid.svg';\n\nconst Dropdown = (props) => {\n  const { placeholder, options } = props;\n\n  const [isActive, setIsActive] = useState(false);\n\n  return (\n    <div className=\"Dropdown\">\n      <div\n        className={`Dropdown__Container ${\n          isActive ? 'Dropdown__Container--is-Active' : ''\n        }`}\n        tabIndex={0}\n        onClick={() => setIsActive(!isActive)}\n        role=\"button\"\n      >\n        <input\n          type=\"text\"\n          className=\"Dropdown__Selection\"\n          id=\"selected\"\n          name=\"selected\"\n          placeholder={placeholder}\n        />\n        <img src={Caret} alt=\"Caret\" />\n        <div className=\"Dropdown__Options-container\">\n          {options.length > 0 &&\n            options.map((option) => (\n              <div className=\"Dropdown__Option\">{option}</div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nDropdown.propTypes = {\n  placeholder: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.string),\n};\n\nDropdown.defaultProps = {\n  placeholder: 'Filter by Region',\n  options: ['Hello', 'World'],\n};\n\nexport default Dropdown;\n"],"sourceRoot":""}